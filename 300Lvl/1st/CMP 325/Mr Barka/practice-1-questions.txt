Questions

1a. What are Software Design Patterns?
Ans: These are general, reusable solutions to commonly occurring problems in software design

b. What are the 3 main Software Design Patterns?
Ans: - Creational: focuses on how objects are created
     - Structural: focuses on how objects relate to one another
     - Behavioural: focuses on how objects interact with one another

c. Explain 3 Design Patterns in Creational Category?
Ans: - Abstract Factory: this lets you produce families of related objects without
                         specifying their concrete classes.
     - Factory Method:   provides an interface for creating objects in a superclass, 
                         but allows subclasses to alter the type of objects that will 
                         be created.
     - Singleton:        this lets you ensure that a class has only one instance

d. Explain 3 Design Patterns in Structural Category?
Ans: - Adapter: this allows objects with incompatible interfaces to collaborate
     - Bridge:  this is used to separate a large class or a set of closely related
                classes into two hierarchies - abstraction and implementation
     - Facade:  this provides a simplified interface to a library, a framework, or any
                other complex set of classes.

e. Explain 3 Design Patterns in Behavioural Category?
Ans: - Iterator: this allows you traverse the elements of a collection without revealing its
                 underlying implementation (e.g list, stack, tree)
     - Observer: this looks for change in a data/event
     - State:    this lets an object alter its behavior when its internal state changes

f. Write code on the Singleton Design Pattern?
Ans: 