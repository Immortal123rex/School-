CMP 323 Exam Prep [Week 1 - 3 (both endpoints inclusive)]

How To Study the Material

Tips: 
- Best to study using the github repo link
  https://github.com/danielchukwu/School-/tree/master/300Lvl/1st

- Use a laptop or device with a relatively big screen to study
- Glancing through the questions and answers may not cement the knowledge. 
  But answering them as you go through them on some book or paper repeatedly 
  definitely will





PRE-HISTORY

Analytical Engine

1. When was the Analytical Engine Created?
Ans: 1837

b. Who developed the Analytical Engine?
Ans: Charles Babbage

c. Who wrote the first program to be executed by the Analytical Engine?
Ans: Ada Lovelace

d. How where the inputs (data and programs) for this Machine provided?
Ans: Punched Cards

e. What did the Analytical Engine use for output?
Ans: A printer, curve plotter and a bell

f. Could the Analytical Engine punch numbers onto cards?
Ans: Yes it is

g. How many numbers and decimal digits could be stored in the Analytical Engine 
   and what what was it's total capacity?
Ans: 1000, numbers of 50 decimal digits each. Total capacity of 20.7kb.

h. What arithmetic did the Analytical Engine employ?
Ans: base-10 fixed-point arithmetic

i. The arithmetical unit of the Analytical Engine was able to perform __________________?
Ans: All four arithmetic operations(+-*/), and comparisons and square roots(optional)

j. The arithmetical unit was called _______?
Ans: The mill

k. The mill is similar to ___________ in our modern day computer?
Ans: The CPU

l. The programming language understood by the Analytical Engine is known as ___________?
Ans: Assembly Language





BIRTH OF PROGRAMMING LANGUAGES

PlanKalkül

2. What is PlanKalkül?
Ans: It is a computer language

b. When was the PlanKalkül language developed?
Ans: 1943-1945

c. Who developed PlanKalkül?
Ans: Konrad Zuse

d. What was Konrad Zuses occupation?
Ans: German Civil Engineer and Inventor

e. PlanKalkül was invented as the programming language for the _____?
Ans: Z3

f. What is the Z3?
Ans: The first programmable electromechanical computing machine, which Zuse built on his own.

f1. When was Z3 built?
Ans: 1941

g. Was PlanKalkül the first high-level. True or False?
Ans: True

h. The PlanKalkül wasn't known thanks to contributing factors of ?
Ans: wartime and postwar Nazi Germany

i. By 1946, Zuse had written a book on the subject but it remained unpublished. True or False?
Ans: True

j. Plankalkül was eventually more comprehensively published in _____ and the first compiler for 
it was implemented in ______.
Ans: 1972, 1998

h. Another independent implementation followed in the year ____ by the __________________?
Ans: 2000, Free University of Berlin 

i. Plankalkül drew comparisons to ________ and ___________?
Ans: APL and relational algebra





Short Code

3. When was Short Code Invented?
Ans: 1949

b. Short Code was the first high-level language ever developed and used for a computer.
Ans: True

c. Short Code was designed by _______. 
Ans: John Mauchly

d. John Mauchly was a co-inventor of ________?
Ans: UNIVAC I

e. What is UNIVAC I?
Ans: the first commercial computer produced in the United States

f. Short Code statements represented ______________ rather than ___________?
Ans: mathematical expressions, machine instruction

g. Short Code required a conversion process called ____________?
Ans: automatic programming 
 
h. Short Code allowed for branching and calls to a _______________?
Ans: Library of functions 

i. Short code was interpreted and ran about _______________?
Ans: 50 times slower than machine code





A-0 System

4. A-0 system was the very first ____________ ever developed for a computer?
Ans: Compiler System

b. The A-0 System was created by who?
Ans: Grace Hopper

c. When was the A-0 system invented?
Ans: 1951 - 1952

d. It was invented for the UNIVAC I?
Ans: True

e. A-0 functioned more as a __________ than the modern notion of a compiler?
Ans: loader/linker

f. A program was specified as a sequence of ________ and _________?
Ans: subroutines and arguments

g. The A-0 system converted the specification into machine code that could be fed into the computer 
   in a second pass to execute the program. True or False?
Ans: True






EVOLUTION OF PROGRAMMING LANGUAGES

Fortran

5. IBM Mathematical Formula Translating System, was later popularly know as _______?
Ans: Fortran

b. Fortran was originally developed by a team lead by _________ at IBM?
Ans: John Backus 

c. In what year was Fortran developed?
Ans: 1950s

d. Fortran was developed for?
Ans: Scientific and Engineering applications on the IBM704 (introduced in 1954)

e. Fortran is a ________, __________, __________ programming language?
Ans: General-purpose, procedural, imperative

f. Why was Fortran Originally designed?
Ans: To improve on the economics of programming

g. Fortran is the first widely accepted high-level computer programming language?
Ans: True

h. Fortran was used by __________ to write programs using a ____________?
Ans: scientists, Mathematical notation/language 

i. Great emphasis was put on the efficiency of the translated machine code, which is still the case today, 
   explaining why Fortran programs are still considered as a benchmark for _____________?
Ans: Execution speed

j. List 10 features introduced by earlier versions of Fortran?
Ans: Comments
     Assignment statement using complex expressions
     Control structures (conditional, loop)
     Subroutines and functions used similarly to the mathematical notion of function
     Formatting of input/output
     Machine independent code
     Procedural programming
     Arrays
     Early development of compilers
     Showed the importance/possibility/relevance of higher-level programming languages
     Compiler development tools/techniques
     Optimizing compiler

k. The below are some of the reasons why Fortran was a success.
   - Made efficient use of programmer’s time
   - Easy to learn and use by scientists
   - Was fully supported by IBM for many years
   - At the time, most applications and users were scientific
   - Simplified many tedious tasks such as input/output formatting
   - Compiler was generating very well optimized code
Ans: True

l. In the area of high performance Fortran is __________?
Ans: the most popular programming language

m. Fortran is used to write programs that benchmark and rank the world's fastest supercomputers. True or False?
Ans: True


 




Cobol

6. Cobol is an acronym for?
Ans: COmmon Business-Oriented Language

b. A specification of COBOL was initially created during the second half of ______ by ____________. 
Ans: 1959 by Grace Hopper

c. The specifications were to a great extent inspired by the ______________ and ____________. 
Ans: Grace Hopper’s FLOW-MATIC and IBM’s COMTRAN languages

d. Initial meeting for the creation of COBOL (then named CBL) was held at the Pentagon in ____________. 
Ans: May 1959

e. The meeting agreed to the following requirements: 
   - Use of English (as business is in English)
   - Ease of use (even at expense of performance)
   - Both these requirements aimed at its use by business people
Ans: True

f. By December 1959, a first version for Cobol was defined, which was later refined in _____ and _____. 
Ans: 1961 and 1962

g. A standard version was defined in ______, Further standardized evolutions were defined in _____________________? 
Ans: 1968,
     1974, 1985 and 2002. 

h. _________ was the First programming language advocated by the United States Department of Defense?
Ans: Cobol

i. The development of Cobol paralleled that of Fortran. 
Ans: True

j. What makes Cobol different from Fortran and Algol?
Ans: It is a data processing language

k. Cobol Puts explicit emphasis on the description of the manipulated data at two levels. Name them?
Ans: - Machine Dependent
     - Machine-independent

l. Difference between Machine dependent and Machine-independent?
Ans: Machine-dependent:   description providing a connection between the Cobol program 
                          and the data files as stored on a specific media.
     Machine-independent: logical description of data as manipulated by procedures.

m. What are some of the Pros and Cons of Cobol?
Ans: 
Positive
   Macros
   Hierarchical data structures 
   Descriptive variable names
   Elaborated Input/Output formatting
   Built-in searching/sorting procedures
   Backed-up by Department of Defense

Negative
   Poor performance of early compilers 
   Restricted to business data applications


n. Cobol was much more standardized compared to ______ and ______?
Ans: Fortran and Algol

o. Newest standard (1990s) includes _____________ and _______________.
Ans: Object-orientation and Garbage collection







Lisp

7. Lisp was created by ____________ in ____ as a practical mathematical notation for computer programs
Ans: John McCarthy in 1958

b. Lisp was influenced by the notation of _________ lambda calculus.
Ans: Alonzo Church's

c. Lisp pioneered many ideas in computer science except
   - functional programming
   - tree data structures
   - automatic storage
   - management
   - dynamic typing
   - self-hosting Computer
   - OOP
Ans: OOP

d. The name LISP was derived from ____________?
Ans: List Processing

e. Lisp source code is made up of _________?
Ans: List

f. What is the major data structure in Lisp?
Ans: Linked List

g. Why was Lisp designed by John McCarthy?
Ans: It was designed to express symbolic computations

h. Give 3 examples of these symbolic computations
Ans: Simplification of expressions
     Differentiation & Integration
     Polynomial Factorization

i. Requirements for a language such as Lisp was?
Ans: Recursions and;
     Linked List

j. Lisp implementation relies on a self-hosting compiler (eval function). As a result, a Lisp program can 
   manipulate its own source code as a data structure, giving rise to the macro systems that allow programmers 
   to create new syntax or even new domain-specific languages embedded in Lisp. True or False?
Ans: True

k. The above question is referred to as ___________?
Ans: Reflective Programming

l. Lisp has been used extensively for _________________?
Ans: artificial intelligence

m. Lisp pioneered the notion of ______________ programming language
Ans: functional

n. List 4 examples of some other functional programming language?
Ans: ML
     Miranda
     Haskell
     F#















SECTION 2 - Week 2

















Algol

1. ALGOL stands for ______________?
Ans: ALGOrithmic Language

b. ALGOL is a family of _______________ computer Programming Languages?
Ans: Imperative

c. When was it developed and did it have influence on many other programming languages.?
Ans: 1950's and yes it did

d. It was introduced by a joint committee of ____________?
Ans: American (ACM) and European (GAMM) experts 

e. What was the purpose of the meeting?
Ans: - To provide a means of communicating numerical methods and other procedures between people
     - To provide a means of realizing a stated process on a variety of machines.

f. List 10 original contributions of the various Algol versions?
Ans: - Code blocks, local variables, static scoping
     - Compound statement
     - Structured control statements improved from Fortran (for, do, if, switch)
     - Recursion
     - Multidimensional and dynamic arrays
     - Dynamic memory allocation (stack)
     - Pass by name, pass by value parameter passing 
     - Nested functions
     - User-defined data types
     - Parallelism/concurrency/semaphores
     - Type casting 
     - Language translation techniques such as syntax-directed translation
     - First language to be defined using a formal notation (BNF)

g. ___________ developed the Backus Normal Form method of describing programming languages syntax specifically 
   for ALGOL 58. 
Ans: John Backus

h. ALGOL 58 was revised and expanded to ALGOL 60 by __________ and ____________?
Ans: Peter Naur
     Donald Knuth's

i. Algol-58 Was implemented first in Europe, but met with some resistance in the United States due to the 
   predominance of _______ at IBM
Ans: Fortran

j. Algol-60 was the first language to include lexical scoping, pass by value and pass by name, recursion, 
   dynamic arrays. 
Ans: True

k. ________ was the first language to be standardized with COBOL.
Ans: Algol






ALGOL VS FORTRAN

2. ________ introduced many more innovative features than than Fortran?
Ans: Algol

b. Which of the 2 had more success?
Ans: Fortran

c. If we consider commercial success, ________ was as huge success?
Ans: Fortran

d. If we consider influential success, ________ was as huge success?
Ans: Algol

e. All of these are Some reasons why Algol did not become more popular than Fortran. True or False:
   - Fortran was already established as Algol was under development.
   - IBM initially supported Algol, but later stopped supporting it.
   - Language adoption follows “snowball effect”. 
   - Algol was introducing more and more advanced “intellectual” features, whose implementation was 
     problematic for performance.
   - Fortran was developed by people who were all focused on the practical aspects of its use, and concentrated 
     on making a stable version of Fortran work on the new hardware as it became available.
   - Algol was developed by scientists that were concerned with the theoretical definition of the language, 
     developing new translation techniques, and exploring new avenues for programming. These endeavors were not 
     seen as immediately practical by many computer users.   
Ans: True

f. Algol had more syntax features than Fortran, with the following consequences. True or False?
   - Harder to learn than Fortran.
   - Compilers were much more complex to develop. Advanced compiler design methods and tools were not 
     available at the time.  
   - Complexity led to less efficient generated machine code.
Ans: True

g. Fortran was seen as more _______, ________ and __________
Ans: stable, practical and efficient 


h. These are Some reasons why Algol was more influential than Fortran
   - Algol was a landmark in the development of programming language theory and implementation, including the 
     Backus-Naur form, syntax-directed translation, and dynamic memory allocation. 
   - Pascal was a direct descendent of Algol, which soon became one of the main language used to teach 
     programming all over the world.
   - Another direct descendent of Algol was Ada, which was adopted as mandatory language by the United States 
     Department of Defense.  
   - Algol was used for more than 30 years in scientific publications for the expression of algorithms.
Ans: True

i. What are 5 of the most influential original contributions of Algol that is currently being used in 
   modern programming languages?
Ans: - User-defined data structures
     - Reference types
     - Compound statement, code block, scoping
     - Concurrency
     - Type casting
     - Dynamic arrays 
     - Operator overloading






PL/I

3. Fortran emphasized ___________?
Ans: floating point arithmetic, arrays, procedures, fast computation

b. Cobol emphasized _____________?
Ans: decimal arithmetic, fast asynchronous input/output, string handling, efficient search/sort routines

c. The language named PL/I was originally developed in _____________ by ____________? 
Ans: 1964-1966 by IBM

d. What were the Goals of PL/I?
Ans: - Provide features of Fortran, augmented with the capacities of Cobol. 
     - Clarity of language. 
     - Incorporating current programming languages innovations.
     - Performance of compiled code competitive with that of Fortran.
     - Extensibility to new hardware and other application areas.
     - Improve programming productivity - transferring effort from programmer to compiler. 
     - Machine and operating system independence. 

e. List at least 8 features of the PL/I language?
Ans: - Reference data types 
     - User-defined data types
     - Concurrency
     - Dynamic arrays
     - Auto-correcting compiler
     - String handling
     - Machine independence
     - Efficiency
     - Exception handling
     - I/O control system
     - Report-generation
     - Recursion

f. The first attempts at meeting these goals of PL/I was mostly based on an evolution of Fortran (name Fortran VI). 
Ans: True

g. It was quickly realized to be infeasible, and a new language was designed and named __________?
Ans: NPL (New Programming Language)

h. NPL was defined in ____, implemented in the UK IBM Hursley Laboratory, then renamed PL/I in ______.  
Ans: 1964, 1965

i. PL/I was easy to learn. True or False?
Ans: True

j. Implementing a PL/I compiler was _________ and ______________.
Ans: difficult and time-consuming

k. It has been claimed that a PL/I compiler was two to four times as large as comparable Fortran or 
   COBOL compilers, and also that much slower. True or False?
Ans: True

l. The Compiler contained many rarely used features, such as __________ and ______________, which added 
   cost and complexity to the compiler, for features seldom used.
Ans: multitasking and exception handling






Pascal

4. Pascal is a very influential ___________ and __________ programming language
Ans: imperative and procedural

b. It was designed by _____________ in _____________ and published in _____?
Ans: Niklaus Wirth in 1968-1969 and published in 1970

c. It was a Small and efficient language was created to encourage __________________?
Ans: Good programming practices using structured programming and data structuring.

d. Pascal was named in honour of ________________?
Ans: French mathematician and philosopher Blaise Pascal

e. Pascal is based on the _________ programming language?
Ans: ALGOL-60

f. Pascal also has many data structuring facilities and other abstractions which were not included in the 
   original ALGOL 60, such as
Ans: - user-defined type definitions 
     - records
     - case statement
     - pointers 
     - enumerations
     - sets

g. Before, and leading up to Pascal, Niklaus Wirth developed the language _____, followed by ______
Ans: Euler, Algol-W





Simula

5. Simula was developed in the _____ at the ________?
Ans: 1960s, Norwegian Computing Center in Oslo

b. It was developed by _________ and ____________?
Ans: Ole-Johan Dahl and Kristen Nygaard

c. Simula 67 introduced?
Ans: - objects
     - classes
     - subclasses
     - virtual methods  
     - coroutines
     - discrete event simulation
     - and featured garbage collection.

d. Simula is considered the first object-oriented programming language?
Ans: True

e. As its name implies, Simula was designed for doing __________?
Ans: simulation

f. Simulation systems are modelled by a series of state changes that occur in parallel 
   through the interaction of the elements of the system as they compete for restricted system resources. 
Ans: True

g. Each type of element of the system is composed of _____________, as well as _____________ that define its own behaviour.
Ans: its internal state, a set of procedures

h. Elements interact with one another as a system by ___________________?
Ans: calling some of the other elements’ procedures

i. Simula was based on ___________ with the addition of the concept of class.
Ans: Algol 60

j. Simula allowed to declare classes of objects, create instances of these classes, name the instances, and even form 
   a hierarchical structure of class declarations. True or False?
Ans: True

k. Simula was designed solely as a language to be used for ___________?
Ans: simulations






ISWIM

6. ISWIM is an _________ computer programming language devised by _____________? 
Ans: abstract, Peter J. Landin

b. ISWIM acronym stands for ____________?
Ans: "If you See What I Mean"

c. Although it wasn't implemented, it proved very influential in the development of subsequent programming languages,
   especially functional programming languages such as SASL, Miranda, ML, Haskell and their successors. 
Ans: True

d. What inspired Peter Landin for the creation of ISWIM?
Ans: LISP's relationship with Lambda Calculus

e. Peter Landin was also involved in the creation of ______?
Ans: Algol

f. Who invented the Quick Sort algorithm?
Ans: Tony Hoare






C 

7. C was developed by ___________ in ___________?
Ans: Dennis Ritchie, 1969 - 1973

b. Where was it created at and for what use?
Ans: At the Bell Telephone Laboratories for use with the Unix Operation System

c. C is a ______________ programming language?
Ans: General-Purpose

d. Although C was designed for implementing system software, it is also widely used for developing ____________? 
Ans: Portable application software

e. C has become one of the most popular programming languages. It is widely used on many different software platforms, 
   and there are few computer architectures for which a C compiler does not exist?
Ans: True

f. C has greatly influenced many other programming languages, most notably C++, which originally began as an 
   extension to C. 
Ans: True

g. C was influenced by the languages _____ and _ (systems languages)?
Ans: BCPL and B

h. BCPL and B were influenced by ______ and ______?
Ans: Algol and Fortran

i. C was designed with the following Goals in mind?
Ans: - To be compiled using a relatively straightforward compiler
     - To provide low-level access to memory
     - To provide language constructs that map efficiently to machine instructions
     - To require minimal run-time support

j. All Unix operating systems included a C compiler and was developed using the C language. 
Ans: True

k. C was readily available on virtually all machines and was proven to be powerful enough to create an OS Thus, 
   many programmers started using it, creating an ever-growing code base and libraries and tools written in C.
Ans: True

l. C is a typical example of ____________ programming language popularity.
Ans: “snowball-effect”

m. C exhibits the following specific characteristics?
Ans: - variables may be hidden in nested blocks 
     - partially weak typing
     - low-level access to computer memory using typed pointers 
     - function and data pointers supporting ad hoc run-time polymorphism 
     - array indexing as a secondary notion, defined in terms of pointer arithmetic 
     - a preprocessor for macro definition, source code file inclusion, and conditional compilation 
     - complex functionality such as I/O, string manipulation, and mathematical functions consistently delegated 
       to library routines 

n. C does not have some features that are available in some other programming languages. Such as?
Ans: - No direct assignment of arrays or strings
     - No automatic garbage collection 
     - No requirement for bounds checking of arrays 
     - No operations on whole arrays 
     - No syntax for ranges, such as the A..B notation used in several languages 
     - No functions as parameters (only function and variable pointers) 
     - No exception handling
     - Only rudimentary support for modular programming 
     - No compile-time polymorphism
     - Only rudimentary support for generic programming (using macros)
     - Limited support for encapsulation 
     - No native support for multithreading and networking 

o. At the time of its creation, C was useful for many applications that had formerly been coded in _____________? 
Ans: Assembly language

p. Despite C's low-level programming capabilities, the language was designed to encourage __________ programming?
Ans: Machine-independent 

q. A standards-compliant and portably written C program can be compiled for a very wide variety of 
   computer platforms and operating systems with little or no change to its source code.
Ans: True

r. C has become available on virtually any computing platform: from _______________ to _______________. 
Ans: Embedded microcontrollers, supercomputers






Smalltalk

8. What is smalltalk?
Ans: Smalltalk is an object-oriented, dynamically typed, reflective programming language

b. It was designed and created in part for educational use at the Learning Research Group of __________?
Ans: Xerox PARC

c. It was created by __________, ____________ and ____________?
Ans: Alan Kay, Dan Ingalls, Adele Goldberg

d. Smalltalk emerged with Alan Kay’s great “Dynabook” insight, predicting the creation of desktop and 
   portable computers, and their availability to everyone. 
Ans: True

e. Kay envisioned that such computers would need to have very intuitive graphics-oriented human-interface capabilities. 
   Smalltalk was a programming environment developed following this vision. The first operational computer resulting 
   from Kay’s vision was the ____________.
Ans: Xerox Alto

f. One of the early versions, Smalltalk-76, was one of the first programming languages to be implemented along with 
   a development environment featuring most of the now familiar tools, including a class library code browser/editor?
Ans: True

g. In Smalltalk, everything is an object: from integer constants to entire software systems. 
Ans: True















SECTION 3 - Week 3

















Ada

1. Ada is a structured, statically typed, imperative, wide-spectrum, and object-oriented high-level programming 
   language, extended mainly from Pascal. True or False?
Ans: True

b. Ada was originally designed by a team led by _____________?
Ans: Jean Ichbiah 

c. When was Ada created?
Ans: 1977 to 1983

d. Ada was named after _____________ who was credited as the first computer programmer
Ans: Ada Lovelace

e. Features of Ada Include. List all?
Ans: - strong typing
     - packages
     - run-time checking
     - concurrency
     - exception handling, and generics
     - Ada 95 added support for object-oriented programming
     - including dynamic dispatch.

f. What year was the US Department of Defense concerned by the number of different programming languages 
   being used for it's embedded computer system projects
Ans: 1970

g. What year was the High Order Language Working Group (HOLWG) formed?
Ans: 1975

h. Why where the HOLWG formed?
Ans: To solve the problems of too many different programming languages being used by finding or creating a 
     programming language generally suitable for the department's requirements

i. The result of the HOLWG was ____?
Ans: Ada

j. The first Ada compiler where released in ______?
Ans: 1985





C++

2. C++ is a statically typed, multi-paradigm, compiled, general-purpose programming language. True or False?
Ans: True

b. What type of language is C++. Low-level, Middle-level or High-Level?
Ans: Middle-Level (Because it is a combination of Low-level and High-Level) 

c. Who developed C++?
Ans: Bjarne Stroustrup

d. When was it developed and where?
Ans: 1979 at Bell Laboratories

e. C++ originated as an enhancement to the C programming language. True or False?
Ans: True

f. What were the goals of C++?
Ans: - Augment C with the notion of classes and inheritance
     - Keep the same performance as C
     - Keep same applicability as C

g. The 2 main languages that inspired C++ was ___________ and why?
Ans: C and Simula
     Why: 
     Simula for it's features and C for it being a general-purpose, fast, portable and widely used language

h. What were some of the initial modifications to C included to get C++?
Ans: - Type checking and conversion for function parameters
     - classes:  data structures (struct) encapsulating functions
     - derived classes (inheritance)
     - public/private access modifiers
     - constructors/destructors
     - friend classes

i. Some factors for popularity of C++ are?
Ans: - C++ is a superset of C: a C++ compiler can compile C programs, and C code and libraries can be reused in C++ 
       classes and programs
     - C++ was designed for performance similar with C
     - A great number of reliable compilers are available for most platforms
     - C++ was the first object-oriented programming language suitable for the development of large commercial 
       software

j. What are some Negative aspects of C++?
Ans: - C++ is a very large and complex language
     - Its low level capacities and focus on efficiency make it an insecure language
     - Some C++ development, such as the Standard Template Library add features that add security and free the 
       programmer from low-level programming, but to the detriment of performance.

k. C++ is widely used in the software industry and in terms of usage, is one of the most popular 
   languages ever created. True or False?
Ans: True

l. Some of C++ application domains includes?
Ans: - systems software
     - application software
     - device drivers
     - embedded software
     - high-performance server and client application
     - and entertainment software such as video games. 
 
 



Java

3. Java is a programming language originally developed by ________ and where?
Ans: James Gosling at Sun Microsystems

b. When was Java Released?
Ans: 1995

c. Java is a general-purpose, concurrent, class-based, and object-oriented, and is specifically designed to have 
   as few implementation dependencies as possible. True or False?
Ans: True

d. It is intended to let application developers "write once, __________“?
Ans: run anywhere

e. What does "write once, run anywhere" mean? 
Ans: It means that once it has been compiled, it can be executed on any platform. 

f. Why was Java originally designed and created?
Ans: It was designed to be used for embedded electronic devices

g. What where some of the goals of Java?
Ans: - Simplicity
     - Reliability
     - Object-orientation

h. Java was later defined as a _______ and _____ version of C++. 
Ans: simpler and safer

i. Java derives much of its syntax from ____ but has a simpler object model and fewer low-level facilities 
Ans: C++

J. Eventually, Java was not used for its original purpose?
Ans: True

k. At the time of Javas release, the potential of the World Wide Web was being realized. True or False?
Ans: True

l. Java’s features became an ideal candidate to develop browser-based applications. True or False?
Ans: True

m. Since it started to be used for this purpose, the use of Java increased faster than that of any other 
   programming language?
Ans: True

n. Java is now used to develop applications for a wide variety of domains and platforms, and is used as a 
   language of choice to teach programming by many institutions. True or False?
Ans: True

o. Java applications are compiled to bytecode that can be interpreted on any Java Virtual Machine (JVM) 
   regardless of computer architecture. 
Ans: True

p. Due to interpretation, Java programs were initially 10 times slower than their C++ counterparts. 
   However, Java programs' execution speed improved significantly with the introduction of 
   'Just-in-time' compilation in 1997/1998?
Ans: True 





1ST HALF COMPLETED 👍✅














Experts